import { Bar, BarChart, XAxis, YAxis } from "recharts";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { ChartContainer, ChartTooltip } from "@/components/ui/chart";
import DashboardHeader from "@/components/common/dashboard-header";

const businessCategoryData = [
	{ category: "Spa & Wellness", businesses: 245, revenue: 487500 },
	{ category: "Beauty Salon", businesses: 189, revenue: 423800 },
	{ category: "Doctor", businesses: 156, revenue: 398600 },
	{ category: "Dentist", businesses: 134, revenue: 356700 },
	{ category: "Hairdresser", businesses: 298, revenue: 334200 },
	{ category: "Physio", businesses: 167, revenue: 289400 },
	{ category: "Massage Therapist", businesses: 203, revenue: 245800 },
	{ category: "Veterinarian", businesses: 89, revenue: 198500 },
	{ category: "Chiropractor", businesses: 112, revenue: 167300 },
	{ category: "Fitness Trainer", businesses: 178, revenue: 145600 },
	{ category: "Nail Salon", businesses: 267, revenue: 123400 },
	{ category: "Nutritionist", businesses: 95, revenue: 98700 },
	{ category: "Mental Health", businesses: 78, revenue: 87200 },
	{ category: "Mechanic", businesses: 145, revenue: 76800 },
].sort((a, b) => b.revenue - a.revenue);

const chartConfig = {
	revenue: {
		label: "Revenue",
		color: "#000000",
	},
};

export default function BusinessCategoryAnalytics() {
	return (
		<section className="w-full pb-8 bg-[#F5F5F5]">
			{/* dashboard header */}
			<DashboardHeader />

			<div className="flex justify-between gap-1 flex-1 px-6 py-4">
				<div className="flex flex-col gap-1">
					<h3 className="text-xl text-primary font-semibold">
						Business Category Revenue Analysis
					</h3>
					<p className="text-sm text-foreground">
						Comprehensive income analysis by business categories and
						performance.
					</p>
				</div>
			</div>

			<div className="p-6 space-y-6">
				{/* Revenue By Business Category */}
				<Card className="bg-white">
					<CardHeader>
						<CardTitle className="text-lg font-semibold text-gray-900">
							Revenue By Business Category
						</CardTitle>
						<p className="text-sm text-gray-500">
							Total revenue generated by each business type
						</p>
					</CardHeader>
					<CardContent>
						<ChartContainer
							config={chartConfig}
							className="h-96 w-full"
						>
							<BarChart
								data={businessCategoryData}
								margin={{
									top: 20,
									right: 30,
									left: 20,
									bottom: 80,
								}}
							>
								<XAxis
									dataKey="category"
									axisLine={false}
									tickLine={false}
									tick={{ fontSize: 11, fill: "#6b7280" }}
									angle={-45}
									textAnchor="end"
									height={80}
									interval={0}
								/>
								<YAxis
									axisLine={false}
									tickLine={false}
									tick={{ fontSize: 12, fill: "#6b7280" }}
									tickFormatter={(value) => {
										if (value >= 1000)
											return `${value / 1000}k`;
										return value.toString();
									}}
									domain={[0, 500000]}
									ticks={[
										50000, 100000, 150000, 200000, 250000,
										300000, 350000, 400000, 450000, 500000,
									]}
								/>
								<ChartTooltip
									content={({ active, payload, label }) => {
										if (
											active &&
											payload &&
											payload.length
										) {
											const data = payload[0].payload;
											return (
												<div className="bg-white border-2 border-primary rounded-lg p-3 shadow-lg">
													<p className="text-gray-800 font-medium mb-2">
														{label}
													</p>
													<p className="text-sm font-medium text-gray-600">
														{data.businesses}{" "}
														businesses
													</p>
													<p className="text-sm font-medium text-gray-800">
														Revenue: $
														{data.revenue.toLocaleString()}
													</p>
												</div>
											);
										}
										return null;
									}}
									cursor={{ fill: "rgba(0, 0, 0, 0.1)" }}
									// position={{ x: 10, y: 10 }}
									// allowEscapeViewBox={{ x: false, y: false }}
									// offset={10}
								/>
								<Bar
									dataKey="revenue"
									fill="#000000"
									radius={[8, 8, 0, 0]}
								/>
							</BarChart>
						</ChartContainer>
					</CardContent>
				</Card>

				{/* Category Performance Details */}
				<Card className="bg-white">
					<CardHeader>
						<CardTitle className="text-lg font-semibold text-gray-900">
							Category Performance Details
						</CardTitle>
						<p className="text-sm text-gray-500">
							Detailed breakdown of each business category
						</p>
					</CardHeader>
					<CardContent>
						<div className="space-y-4">
							{businessCategoryData.map((category, index) => (
								<div
									key={index}
									className="flex items-center justify-between p-4 border border-[#DCDCDC] rounded-lg"
								>
									<div>
										<h3 className="font-medium text-gray-900 text-base">
											{category.category}
										</h3>
										<p className="text-sm text-gray-500">
											{category.businesses} businesses
										</p>
									</div>
									<div className="font-semibold text-gray-900 text-base">
										${category.revenue.toLocaleString()}
									</div>
								</div>
							))}
						</div>
					</CardContent>
				</Card>
			</div>
		</section>
	);
}
